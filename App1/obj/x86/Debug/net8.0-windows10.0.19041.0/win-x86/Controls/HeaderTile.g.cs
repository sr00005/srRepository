#pragma checksum "D:\Microsoft Visual Studio\Source\Repos\App1\App1\Controls\HeaderTile.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "55065EDB76A5DB007C18794DE16E4B1D8BDDEC2C90913ECDFA12A1AE5B0F130C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App1.Controls
{
    partial class HeaderTile : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_HyperlinkButton_NavigateUri(global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj, global::System.Uri value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Uri) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Uri), targetNullValue);
                }
                obj.NavigateUri = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(global::Microsoft.UI.Xaml.Controls.ContentPresenter obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HeaderTile_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IHeaderTile_Bindings
        {
            private global::App1.Controls.HeaderTile dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj2;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj3;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj4;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2NavigateUriDisabled = false;
            private static bool isobj3ContentDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;

            private HeaderTile_obj1_BindingsTracking bindingsTracking;

            public HeaderTile_obj1_Bindings()
            {
                this.bindingsTracking = new HeaderTile_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 48 && columnNumber == 13)
                {
                    isobj2NavigateUriDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 21)
                {
                    isobj3ContentDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 25)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 25)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\HeaderTile.xaml line 40
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>(target);
                        break;
                    case 3: // Controls\HeaderTile.xaml line 65
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                        break;
                    case 4: // Controls\HeaderTile.xaml line 74
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 5: // Controls\HeaderTile.xaml line 80
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IHeaderTile_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::App1.Controls.HeaderTile>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::App1.Controls.HeaderTile obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Link(obj.Link, phase);
                        this.Update_Source(obj.Source, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_Link(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\HeaderTile.xaml line 40
                    if (!isobj2NavigateUriDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_HyperlinkButton_NavigateUri(this.obj2, (global::System.Uri) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Uri), obj), null);
                    }
                }
            }
            private void Update_Source(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\HeaderTile.xaml line 65
                    if (!isobj3ContentDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj3, obj, null);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\HeaderTile.xaml line 74
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\HeaderTile.xaml line 80
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HeaderTile_obj1_BindingsTracking
            {
                private global::System.WeakReference<HeaderTile_obj1_Bindings> weakRefToBindingObj; 

                public HeaderTile_obj1_BindingsTracking(HeaderTile_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HeaderTile_obj1_Bindings>(obj);
                }

                public HeaderTile_obj1_Bindings TryGetBindingObject()
                {
                    HeaderTile_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_Link(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    HeaderTile_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::App1.Controls.HeaderTile obj = sender as global::App1.Controls.HeaderTile;
                        if (obj != null)
                        {
                            bindings.Update_Link(obj.Link, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_Source(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    HeaderTile_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::App1.Controls.HeaderTile obj = sender as global::App1.Controls.HeaderTile;
                        if (obj != null)
                        {
                            bindings.Update_Source(obj.Source, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_Title(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    HeaderTile_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::App1.Controls.HeaderTile obj = sender as global::App1.Controls.HeaderTile;
                        if (obj != null)
                        {
                            bindings.Update_Title(obj.Title, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_Description(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    HeaderTile_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::App1.Controls.HeaderTile obj = sender as global::App1.Controls.HeaderTile;
                        if (obj != null)
                        {
                            bindings.Update_Description(obj.Description, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_Link = 0;
                private long tokenDPC_Source = 0;
                private long tokenDPC_Title = 0;
                private long tokenDPC_Description = 0;
                public void UpdateChildListeners_(global::App1.Controls.HeaderTile obj)
                {
                    HeaderTile_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::App1.Controls.HeaderTile.LinkProperty, tokenDPC_Link);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::App1.Controls.HeaderTile.SourceProperty, tokenDPC_Source);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::App1.Controls.HeaderTile.TitleProperty, tokenDPC_Title);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::App1.Controls.HeaderTile.DescriptionProperty, tokenDPC_Description);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Link = obj.RegisterPropertyChangedCallback(global::App1.Controls.HeaderTile.LinkProperty, DependencyPropertyChanged_Link);
                            tokenDPC_Source = obj.RegisterPropertyChangedCallback(global::App1.Controls.HeaderTile.SourceProperty, DependencyPropertyChanged_Source);
                            tokenDPC_Title = obj.RegisterPropertyChangedCallback(global::App1.Controls.HeaderTile.TitleProperty, DependencyPropertyChanged_Title);
                            tokenDPC_Description = obj.RegisterPropertyChangedCallback(global::App1.Controls.HeaderTile.DescriptionProperty, DependencyPropertyChanged_Description);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Controls\HeaderTile.xaml line 74
                {
                    this.TitleText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\HeaderTile.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    HeaderTile_obj1_Bindings bindings = new HeaderTile_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

